From: Jakub Adam <jakub.adam@ktknet.cz>
Date: Mon, 8 Feb 2016 20:53:40 +0100
Subject: fix-utf8-comments

---
 .../eclipse/cdt/make/internal/ui/text/makefile/MacroDefinitionRule.java | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/build/org.eclipse.cdt.make.ui/src/org/eclipse/cdt/make/internal/ui/text/makefile/MacroDefinitionRule.java b/build/org.eclipse.cdt.make.ui/src/org/eclipse/cdt/make/internal/ui/text/makefile/MacroDefinitionRule.java
index b4fd6ea..12d8d9f 100644
--- a/build/org.eclipse.cdt.make.ui/src/org/eclipse/cdt/make/internal/ui/text/makefile/MacroDefinitionRule.java
+++ b/build/org.eclipse.cdt.make.ui/src/org/eclipse/cdt/make/internal/ui/text/makefile/MacroDefinitionRule.java
@@ -160,7 +160,7 @@ class MacroDefinitionRule implements IPredicateRule {
 
 	protected boolean isValidCharacter(int c) {
 		// From GNUMakefile manual:
-		// A variable name may be any sequence of characters not containing ‘:’, ‘#’, ‘=’, or leading or trailing whitespace.
+		// A variable name may be any sequence of characters not containing ':', '#', '=', or leading or trailing whitespace.
 		// However, variable names containing characters other than letters, numbers, and underscores should be avoided,
 		// as they may be given special meanings in the future, and with some shells they cannot be passed through the environment to a sub-make
 		return !Character.isWhitespace(c) && c != ':' && c != '#' && c != '=';
